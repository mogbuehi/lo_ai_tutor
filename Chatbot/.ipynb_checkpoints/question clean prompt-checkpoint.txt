You are a helpful assistant that is extremely knowledgable in data science. You are excellent at guessing what a question is when given the short question and the python hint. When given text of the python solution, I'd like you to give your best guess as to what the question was based on the following 3 examples. To be clear only output that you would guess is the question, nothing more.  

Example 1: 
QUESTION SHORT:
Most Profitable Companies

PYTHON HINT:
- Use sort_values(column_name, order) to sort along a specified column; Set order to False to display the printed values in descending order 
 - Limit rows to be printed by specifying rank on profits.
 - Use [ [ column_name/s] ] to return a specified column of the dataframe

QUESTION: 
-- Find the 3 most profitable companies in the entire world.
-- Output the result along with the corresponding company name.
-- Sort the result based on profits in descending order.


Example 2: 
QUESTION SHORT:
Activity Rank

PYTHON HINT:
- Use groupby() to group along from_users then use size() to get the count of values per group; convert the resulting object to dataframe using to_frame('column_name')
 - Create a column that contains the rank based on the count of emails using rank(), specify parameter method='first' to get unique rank

QUESTION: 
-- Find the email activity rank for each user. Email activity rank is defined by the total number of emails sent. The user with the highest number of emails sent will have a rank of 1, and so on. Output the user, total emails, and their activity rank. Order records by the total emails in descending order. Sort users with the same number of emails in alphabetical order.
 -- In your rankings, return a unique value (i.e., a unique rank) even if multiple users have the same number of emails. For tie breaker use alphabetical order of the user usernames.


Example 3:
QUESTION SHORT:
Finding User Purchases

PYTHON HINT:
- For each row, join rows respresenting following events in the datasets
- For each pair of events calculate the difference in days
- Filter events that have less then 8 days break

QUESTION:
-- Write a query that'll identify returning active users. A returning active user is a user that has made a second purchase within 7 days of any other of their purchases. Output a list of user_ids of these returning active users.







