Freelancer*: Thank you so much for taking the time to meet with me today. I went through the projects that you had available, the freelance projects on Statascratch, and I learned more about it from a written document. It sounds really exciting and I would love to get started working on this. Thanks again for just taking the time to meet with me for this meeting. I would love to just gain a deeper understanding of Statascratch, a little bit about the company, its overarching goals, and how you see it moving forward. I think it would provide context for when we are working on these projects to ensure that everything aligns with the goals that you have. If you don't mind, could you just tell me a little bit more about Statascratch, how things are going, and the direction you're envisioning? Any top-line metrics that you're looking for or the technology that you're using?

*Client*: Yeah, absolutely. So, taking a few steps back, Statascratch is primarily a data science resource right now, used for interview prep. We have over probably over 700 questions right now that have been asked on real interviews from a lot of popular companies. What we do is we scrape all those questions, we create data sets off of those questions, and we present solutions, so that's essentially what we have right now.

*Client*: And where I see it going is I want to create a better resource for people, not only prepping for interviews but also just studying data science and trying to get better at it. What that means is, not only do you need to understand the solution, but to help you understand the solution, you also need a step-by-step walkthrough to really understand the thinking behind it, like how was the solution even created? How does a beginner data scientist start being much more proficient at answering these types of questions? You have these questions that are scraped from interviews, but these types of questions are also what you would get day-to-day as a data scientist. And so, what I want to do is create these walkthroughs, create hints.

*Client*: Great, we do have other solutions, alternative solutions to these questions but the issue that we have right now for Statascratch is that one, we got over seven hundred questions and two, we have at least four languages that data scientists use. They're all different flavors of SQL, some of them use R, some of them use Python and we're adding more and more every single month. So what that means is it becomes more of a content management problem then a technical problem. What I'm trying to do with a hire is to create supplementary resources like walkthroughs, hints and all that for these coding questions so that we have a complete set of resources for all the questions in all the languages that we have on our platform. That's the ultimate goal with this project and that's all there really is just to be the ultimate resource for anything related to data whether or not you're a data scientist, an engineer, a data analyst.

*Freelancer*: Got it, thanks for providing a little bit more context. So just to clarify, you started off with more of the interview prep but then you're developing Statascratch to be an all-encompassing resource for all data-related areas, even for people who already are working as, let's say, data scientists or data analysts, or data engineers. They are still people that you're targeting to be using Statascratch. I would like to add a little bit more clarity to that like at like I mentioned the questions are very similar questions that you would obviously get in an interview but you would also have to answer on the job.

*Client*: Also, the kind of difference on the job is you're typically working with more industry-level tools like Hive, Hadoop, and Spark SQL, and there's not really any resources that are catered towards that crowd, the industry-level crowd. That's kind of also another reason why I want these resources to really match what people in the industry are doing and in the end, that's why I'm trying to add all of these languages and solutions to really cater to both people interviewing and also people that are on the job.

*Freelancer*: Got it, thanks so much for that. So, in terms of your metrics or your goals, would you be able to share a little bit more about what you're working towards and also, I guess we can dive a little bit deeper into the topic of AI in a bit? I think in terms of any metrics that you have, I think that could be really helpful, and in terms of any particular, I know that some of the projects are AI-based projects so, how do you see AI and how to leverage that for Statascratch as a whole? For example, within AI, as we're all aiming towards kind of increasing output, you probably have an understanding of what is like the content that you want to compile in that content library. So, are there any specific metrics that you set for yourself?

*Client*: I wouldn't say specific metrics. What I would rely on is what the goal actually is, right? It's not just catering to the people interviewing but catering to the first five years of a person's career in data. The way I think about it, the way I thought about my career, like when I was just starting off, is there are probably one or two years where you're really just prepping for your first job or your first career transition to some sort of role in data. So you could be a master's student, you could be an undergrad, or you can be like working in the industry right now, not as a data scientist, but prepping to become one. That usually takes one or two years, so that's where the interview prep is happening. But as soon as you actually land your first job in data, it is so much different than just prepping for an interview. As I mentioned before, you're dealing with industry-grade tools like Hive or PySpark that you have to learn. It's a completely different syntax and then also there are best practices.

*Client*: The stuff you did as a student or just as a hobby project, you're not going to do that in the same way on the job because every company, every team has a certain way of doing things, their own best practices. So, it took me probably like three years to really figure that out to be a competent data scientist. So what I'm really aiming Statascratch is, at least, to cater to those first five years in your career so that when you exit out your third year as a data scientist, you feel very proficient. I want everybody to think about Statascratch as the resource that you can go to, whether or not you're a student or very early in your career. To go to Statascratch and learn a little bit more about what it is you're really supposed to learn, the best practices that go with data science. That's the goal. There's no metric really behind it, but I can see myself with users on the platform, who's using what language, what resources they are accessing. The reason why I have this project is people are asking for more comprehensive resources, they're asking for comprehensive walkthroughs for every single language that we have.

*Client*: Imagine how difficult or time-consuming it actually is because we have seven hundred questions and we add questions every single month, and you have like half a dozen languages, it just takes so long to create all of that stuff. So, we're really trying to leverage AI in such a way that it's going to help us create all of these walkthroughs, hints, you know, all of that stuff.

*Freelancer*: Very awesome, thank you so much. I think I have a pretty good understanding about just more of the overarching information about Statascratch. Should we dive into project number one? I would love to just get some more context and details about your expectations for the AI coding assistant.

*Client*: So, for the AI coding assistant project that we want to use here, if you want the project to develop an AI-powered coding assistant, I can provide step-by-step walkthroughs for coding questions and, to a certain extent, for non-coding questions that you have in your platform as well, and function across various languages. Just to clarify, you want this coding assistant to generate and be able to provide explanations and optimizations, and fix issues. Does that sound correct?

*Client*: What I'm looking for is essentially like, we all know what chatbots are, when we are on a website trying to get customer service, right? For Statascratch, I want basically the same thing built in, but more complex where a user, if they're on a page where we have a question that they're trying to code up, I want the user to be able to ask the bot questions that will help them create that solution. A question that a user might have is like, "Hey, can I have a hint?" and then the AI would actually provide that hint. Maybe another one's, "Can you provide the first step in creating a solution?" and then the bot would actually help produce that. There are several ways this can be done.

*Client*: I'm thinking about one, it could do it on the fly, like it will connect to the API, ask that question, provide all of the necessary data inputs to be able to produce that first hint or first step to the walkthrough, and then send it over to the user. That's just real-time right there. The difficult part in creating that, if you were to do it in real-time, is that you have to figure out the recipe in terms of what information do I need to send to the AI in order for the AI to give me the first hint.

*Client*: Another way of tackling the problem is to pre-seed all of that stuff, which means that you produce the walkthrough, you produce the hints ahead of time, using AI to do that, and all you're going to be doing is having a set of frequently asked questions that the user can ask. They'll be able to get the first hint, the second hint, the third hint, and you're not actually talking to the AI, you're just grabbing data from the database. But the project would entail you actually creating a bot, talking to the API, and grabbing all of that information, making sure it's accurate and correct before we act.

*Client*: Put it on the platform, right? There are two ways you can actually do it, and I'm thinking actually that it's probably best to do both. We already know the universe in terms of what we want - we want walkthroughs, we want hints. We know what the 700 questions are, we know what the solutions are, right? So we already know what the FAQs are. The only kind of thing you don't know are all the other questions that a user can ask, right? That's kind of where we can leverage the API in real time.

*Client*: That's kind of what I'm looking for. That makes sense on a higher level, but I'm really not - I'm also looking for some creativity from people too. Like, you're all kind of the first time building this type of stuff. You all kind of understand what a data role is at a company or maybe you have used Statascratch in the past, and then you know this is a feature that you want to build. So use some creativity and build a feature that you want, that you would actually use. So yeah, I'm not intending this to be very prescriptive.

*Freelancer*: Deeper into what you said about those two approaches, the first one like the FAQ that's being brought up. In terms of the communication, will we be using the API in order to get that like the assumptions ready for that? That would be some sort of access to a database right, to be able to have that information and then the output of that?

*Client*: This is like the MVP version. It doesn't probably get something that we're going to be, like in the future kind of thing, but how are you envisioning the interaction between the user? Is it going to be like a button that you press? It could be like a chatbot, like a small chat where you can type in and then you see that way. A lot of times in those chatbots, they have frequently asked questions. 

*Client*: So that's how it could start. You can just have the chatbot basically say "How can I help you?" and list those FAQs so that it could be a starting point for a user. And then when the real-time queries come in if a user actually starts asking other questions. 

*Freelancer*: I see what you mean by that combination of having a database already available. It would also be more cost-effective to do it this way as opposed to calling every single time. I think that makes a lot of sense. For the combining of those two approaches, the simpler approach, probably the first part to work on, is the direct API call. A lot of it is really going to be on the engineering side as well.

*Client*: I would expect that first part is done kind of like in the Jupyter notebooks type of Python notebook. Figure out what recipe you need in terms of engineering and then create the outputs for that. You can basically create the FAQ just from the Python notebook. And so then the bells and whistles would really be about putting it all in the database and getting it working on an app.

*Freelancer*: Got it, thank you so much. This was really helpful, and I think we have enough to get started on creating a proposal to align with you and hammer out the details of what we can make in the next couple of weeks.

*Client*: Awesome, thanks so much.
